name: Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: password
  POSTGRES_DB: postgres
  DATABASE_URL: postgres://postgres:password@localhost:5432/main
  JWT_SECRET: secret
  SQLX_FEATURES: "rustls,postgres"

jobs:
  tests:
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image 
        image: postgres:latest
        # Environment variables scoped only for the `postgres` element
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: postgres
        # When you map ports using the ports keyword, GitHub uses the --publish command to publish the containerâ€™s ports to the Docker host
        # Opens tcp port 5432 on the host and service container
        ports:
          - 5432:5432
    runs-on: ubuntu-latest
    name: testing server
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Protoc
        uses: arduino/setup-protoc@v3
      - name: Install rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Install sqlx-cli
        run:
            cargo install sqlx-cli
            --features ${{ env.SQLX_FEATURES }}
            --no-default-features
            --locked
            # The --locked flag can be used to force Cargo to use the packaged Cargo.lock file if it is available. 
            # This may be useful for ensuring reproducible builds, to use the exact same set of dependencies that were available when the package was published. 
            # It may also be useful if a newer version of a dependency is published that no longer builds on your system, or has other problems
      - name: Install postgresql-client
        run: sudo apt-get update && sudo apt-get install postgresql-client -y

      - name: Migrate database
        run: SKIP_DOCKER=true ./scripts/init_db.sh
      # A GitHub Action that implements smart caching for rust/cargo projects with sensible defaults.
      - name: Rust Cache Action
        uses: Swatinem/rust-cache@v2
      - name: Run Tests
        run: cargo test
  coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Protoc
        uses: arduino/setup-protoc@v3
      - name: Install rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Generate Code Coverage
        run: cargo install cargo-tarpaulin && cargo tarpaulin --verbose --workspace
